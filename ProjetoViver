CREATE DATABASE IF NOT EXISTS `ProjetoViver` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci;

USE ProjetoViver;

CREATE TABLE `usuarios` (
  `id` int(11) NOT NULL,
  `email` varchar(255) DEFAULT NULL,
  `senha` varchar(255) DEFAULT NULL
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

INSERT INTO `usuarios` (`id`, `email`, `senha`) VALUES
(1, 'sjeanluca@gmail.com', 'e10adc3949ba59abbe56e057f20f883e');

CREATE TABLE funcionario
(
	cpf_funcionario VARCHAR(14) NOT NULL PRIMARY KEY,
    nome_funcionario VARCHAR(255) NOT NULL,
    email_funcionario VARCHAR(255) NOT NULL,
    senha_funcionario VARCHAR(255), 
    rg_funcionario VARCHAR(13),
    telefone_funcionario VARCHAR(15),
    numeroAgencia_funcionario VARCHAR(10),
    numeroContaBancaria_funcionario VARCHAR(15),
    salario_funcionario DECIMAL(7),
    cargo_funcionario VARCHAR(50)
)DEFAULT CHARSET = utf8;

drop table funcionario;

SELECT * FROM funcionario;

desc funcionario;


CREATE TABLE endereco_residencial
(
	id_endereco_residencia INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    cep VARCHAR(9),
    logradouro VARCHAR(255),
    numero_casa VARCHAR(8),
    complemento VARCHAR(255),
    bairro VARCHAR(255),
    cidade VARCHAR(120)
)	DEFAULT CHARSET = utf8;



CREATE TABLE responsavel
(
	cpf_responsavel VARCHAR(14) NOT NULL PRIMARY KEY,
    nome_responsavel VARCHAR(255),    
    rg_responsavel VARCHAR(13),
    telefone_pessoal_responsavel VARCHAR(15),
    telefone_adicional_responsavel VARCHAR(15),
    id_endereco_residencia INT,
    FOREIGN KEY (id_endereco_residencia) REFERENCES endereco_residencial (id_endereco_residencia)
)	DEFAULT CHARSET = utf8;

select * from responsavel;
select * from endereco_residencial where id_endereco_residencia = 156;
select * from funcionario;
SELECT * FROM aluno where id_aluno = 134;
select * from responsavel_pelo_aluno;

delete from responsavel where cpf_responsavel = '459.321.248-06';

truncate table responsavel;
truncate table endereco_residencial;

truncate table responsavel_pelo_aluno;

SET foreign_key_checks = 0;
#Delete o que tiver que deletar
SET foreign_key_checks = 1;
#Ative a checagem novamente

ALTER TABLE responsavel
ADD CONSTRAINT unic_cpf UNIQUE (cpf_responsavel);

alter table endereco_residencial add column cidade varchar(120);

UPDATE responsavel SET id_endereco_residencia = 17 WHERE id = 1;



SELECT DISTINCT nome_responsavel, cpf_responsavel
FROM responsavel WHERE nome_responsavel like '%pedro%';

SELECT nome_responsavel, cpf_responsavel
FROM responsavel WHERE nome_responsavel like '%jean%'
UNION all
SELECT DISTINCT nome_funcionario, cpf_funcionario
FROM funcionario 
WHERE nome_funcionario like '%jean%';


CREATE TABLE responsavel_pelo_aluno
(
	id_responsavel_pelo_aluno INT NOT NULL AUTO_INCREMENT PRIMARY KEY,    
    responsavel_cpf VARCHAR(14),
    aluno_id INT,
    FOREIGN KEY (aluno_id) REFERENCES aluno (id_aluno),
    FOREIGN KEY (responsavel_cpf) REFERENCES responsavel (cpf_responsavel)
);

alter table responsavel_pelo_aluno add column parentesco_responsavel VARCHAR(12);

DESCRIBE responsavel_pelo_aluno;

/*CREATE TABLE aluno
(
	id_aluno INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_aluno VARCHAR(255),
    nascimento_aluno DATE,
    sexo ENUM('Masculino','Feminino'),
    nacionalidade ENUM('Brasileiro','Estrangeiro'),
    estado_nascimento VARCHAR(75),
    cidade_nascimento VARCHAR(120),
    pais_nascimento VARCHAR(60),
    id_endereco_residencia INT,
    FOREIGN KEY (id_endereco_residencia) REFERENCES endereco_residencial(id_endereco_residencia)
)	DEFAULT CHARSET = utf8;*/

CREATE TABLE aluno
(
	id_aluno INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_aluno VARCHAR(255),
    nascimento_aluno DATE,
    sexo VARCHAR(9),
    nacionalidade VARCHAR(11),
    estado_nascimento VARCHAR(75),
    cidade_nascimento VARCHAR(120),
    pais_nascimento VARCHAR(60),
    id_endereco_residencia INT,
    FOREIGN KEY (id_endereco_residencia) REFERENCES endereco_residencial(id_endereco_residencia)
)	DEFAULT CHARSET = utf8;

ALTER TABLE aluno ADD COLUMN resp_financeiro VARCHAR(14);
ALTER TABLE aluno 
ADD FOREIGN KEY (resp_financeiro) 
REFERENCES responsavel(cpf_responsavel);

ALTER TABLE aluno ADD COLUMN situacao VARCHAR(7) DEFAULT 'ativo';
ALTER TABLE aluno drop COLUMN situacao;

ALTER TABLE aluno ADD COLUMN resp_didatico VARCHAR(14);

ALTER TABLE aluno 
ADD FOREIGN KEY (resp_didatico) 
REFERENCES responsavel(cpf_responsavel);

INSERT INTO aluno (sexo) values ('Masculino');
INSERT INTO aluno (nacionalidade) values ('Brasileiro');



CREATE TABLE camisas (
	idCamisa TINYINT PRIMARY KEY AUTO_INCREMENT,
    nome VARCHAR(25),
    tamanho ENUM('pequena', 'Média', 'grande', 'extra-grande')
);

INSERT INTO responsavel_pelo_aluno (responsavel_cpf, aluno_id)
VALUES ('459.321.248-06', 17);

delete FROM responsavel where cpf_responsavel = '300.315.858-92';
SELECT * FROM responsavel where cpf_responsavel = '138.352.318-55';
SELECT * FROM aluno order by nome_aluno;
SELECT * FROM usuarios;
SELECT * FROM endereco_residencial;
SELECT * from aluno where id_aluno = 123;
SELECT * FROM responsavel_pelo_aluno;
SELECT 
	nome_responsavel, 
	rg_responsavel, 
	telefone_pessoal_responsavel, 
	telefone_adicional_responsavel 
FROM responsavel
WHERE cpf_responsavel = '300.315.858-92';


SELECT * FROM endereco_residencial;

alter table aluno add column situacao ENUM('Masculino','Feminino');

INSERT INTO aluno (sexo)
VALUES ('Masculino');

DROP TABLE responsavel_pelo_aluno;
describe responsavel_pelo_aluno;
DESCRIBE responsavel;
describe endereco_residencial;
describe aluno;


SELECT a.nome_aluno, b.responsavel_cpf FROM aluno a
JOIN responsavel_pelo_aluno b
ON a.id_aluno = b.aluno_id
JOIN responsavel r
ON b.responsavel_cpf = r.cpf_responsavel;

SELECT r.nome_responsavel, r.cpf_responsavel, b.id_responsavel_pelo_aluno 
FROM responsavel_pelo_aluno b
JOIN responsavel r
ON r.cpf_responsavel = b.responsavel_cpf
WHERE b.aluno_id = 123;

ALTER TABLE aluno ADD resp_financeiro INT(11);


UPDATE aluno SET id_endereco_residencia = 59 WHERE id_aluno = 45;


SELECT r.nome_responsavel, r.cpf_responsavel, b.id_responsavel_pelo_aluno, b.parentesco_responsavel
FROM responsavel_pelo_aluno b
JOIN responsavel r
ON r.cpf_responsavel = b.responsavel_cpf
WHERE b.aluno_id = 123;

INSERT INTO responsavel_pelo_aluno
( 
	responsavel_cpf,
	aluno_id
)
VALUES
(
	'459.321.248-06',
	17
);


UPDATE responsavel_pelo_aluno 
SET parentesco_responsavel = null 
WHERE id_responsavel_pelo_aluno = 49;

ALTER TABLE endereco_residencial ADD estado VARCHAR(75);

SELECT 
	cep,
	logradouro,
	numero_casa,
	complemento,
	bairro,
	cidade, 
	estado
FROM endereco_residencial
WHERE id_endereco_residencia = 142;





UPDATE aluno 
SET resp_financeiro = '459.321.248-06' 
WHERE id_aluno = 119;

SELECT 
	a.nascimento_aluno, 
	a.sexo, 
	a.nacionalidade, 
	a.estado_nascimento, 
	a.cidade_nascimento, 
	a.pais_nascimento, 
	a.id_endereco_residencia,
    (select r.nome_responsavel
		FROM aluno a
		JOIN responsavel r
		ON a.resp_financeiro = r.cpf_responsavel
        WHERE id_aluno = 119) as resp_financeiro,
	(select r.nome_responsavel
		FROM aluno a
		JOIN responsavel r
		ON a.resp_didatico = r.cpf_responsavel
        WHERE id_aluno = 119) as resp_didatico
FROM aluno a
WHERE id_aluno = 119;

DELETE FROM aluno
WHERE id_aluno = 124;

SELECT 	id_responsavel_pelo_aluno
FROM 	responsavel_pelo_aluno
WHERE 	aluno_id = 124;

DELETE FROM responsavel_pelo_aluno
WHERE id_responsavel_pelo_aluno in (50, 51, 52);


SELECT 	r.nome_responsavel, 
		r.cpf_responsavel, 
		b.id_responsavel_pelo_aluno,
		b.parentesco_responsavel,
		r.id_endereco_residencia
FROM responsavel_pelo_aluno b
JOIN responsavel r
ON r.cpf_responsavel = b.responsavel_cpf
WHERE b.aluno_id = 123;


SELECT 
	rg_responsavel, 
	telefone_pessoal_responsavel, 
	telefone_adicional_responsavel 
FROM responsavel
WHERE cpf_responsavel = '300.315.858-92';

SELECT 	resp_financeiro, resp_didatico
FROM 	aluno
WHERE 	id_aluno = 123;

SELECT 	id_responsavel_pelo_aluno
FROM 	responsavel_pelo_aluno
WHERE 	aluno_id = 123 AND responsavel_cpf = '438.024.498-94';

DELETE FROM responsavel_pelo_aluno
WHERE id_responsavel_pelo_aluno = 71;

UPDATE responsavel 
SET	cpf_responsavel = '461.738.888-58',
	nome_responsavel = 'Edna Maria da Silvass',
	rg_responsavel = '53.711.286-8', 
	telefone_pessoal_responsavel = '(12)99750-5622', 
	telefone_adicional_responsavel = '(12)3664-5043' 
WHERE cpf_responsavel = '138.352.318-55';
					  	
UPDATE responsavel 
SET	id_endereco_residencia = 156
WHERE cpf_responsavel = '138.351.428-36';	


select * from responsavel where cpf_responsavel = '138.351.428-36';

UPDATE endereco_residencial 
SET	cep = '12460-000',
	logradouro = 'rua Onze',
	numero_casa = 211, 
	complemento = 'casa', 
	bairro = 'vila Paulista', 
	estado = 19, 
	cidade = 19 
WHERE id_endereco_residencia = 156;

CREATE TABLE login
(
	id_login INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    email VARCHAR(255) NOT NULL,
    senha VARCHAR(255),
    situacao int
)DEFAULT CHARSET = utf8;

describe login;
describe funcionario;

select * from funcionario;
select * from login;
drop table login;

delete from funcionario where cpf_funcionario = '438.024.498-94';

INSERT INTO login (email, senha) VALUES ('sjeanluca@gmail.com.BR', 'e10adc3949ba59abbe56e057f20f883e');

ALTER TABLE aluno ADD COLUMN id_login INT(11);

ALTER TABLE aluno 
ADD FOREIGN KEY (id_login) 
REFERENCES login(id_login);

ALTER TABLE funcionario ADD COLUMN id_login INT(11);

ALTER TABLE funcionario 
ADD FOREIGN KEY (id_login) 
REFERENCES login(id_login);

select id_funcionario from funcionario where cpf_funcionario = '438.024.498-94' and id_login is null;

ALTER TABLE login
MODIFY COLUMN situacao INT
DEFAULT 1;

UPDATE login 
SET	situacao = 1
WHERE email = 'sjeanluca@gmail.com';

UPDATE login 
SET	senha = 'e10adc3949ba59abbe56e057f20f883e'
WHERE id_login = 1;

SET SQL_SAFE_UPDATES = 0; # para fazer o update da linha de cima
SET SQL_SAFE_UPDATES = 1; # para voltar a configuração ao normal

UPDATE funcionario 
SET	id_login = 1
WHERE id_funcionario = 1;

SELECT * FROM responsavel_pelo_aluno r
JOIN login l
ON r.cpf_responsavel = b.responsavel_cpf
WHERE b.aluno_id = 123;

ALTER TABLE funcionario ADD COLUMN id_login INT(11);

ALTER TABLE funcionario ADD CONSTRAINT id_login
FOREIGN KEY(id_login) REFERENCES login (id_login);	

ALTER TABLE login ADD COLUMN cargo VARCHAR(50);

UPDATE login SET cargo = 'Ensino Fundamental 2 / Médio' WHERE id_login = 3;

CREATE TABLE disciplina 
(
	id INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome VARCHAR(255) NOT NULL
)DEFAULT CHARSET = utf8;

select nome, id from disciplina order by nome;

delete from disciplina where id = 7;

CREATE TABLE matriz_curricular 
(
	id_matriz INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_matriz VARCHAR(255) NOT NULL
)DEFAULT CHARSET = utf8;

ALTER TABLE matriz_curricular ADD COLUMN tipo_ensino INT(1) NOT NULL;

select * FROM matriz_curricular;

CREATE TABLE disciplinas_da_matriz
(
	id_disciplinas_da_matriz INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_matriz INT(11) NOT NULL,
    id_disciplina INT(11) NOT NULL,
    FOREIGN KEY (id_matriz) REFERENCES matriz_curricular (id_matriz),
    FOREIGN KEY (id_disciplina) REFERENCES disciplina (id)
)DEFAULT CHARSET = utf8;

select * from disciplinas_da_matriz;

SELECT 	d.nome, 
		d.id,
        m.id_matriz as idMatriz
FROM disciplina d
JOIN disciplinas_da_matriz m
ON d.id = m.id_disciplina
WHERE m.id_matriz = 5;

DELETE FROM disciplinas_da_matriz
WHERE id_disciplina = 6 AND id_matriz = 1;

SELECT 	d.id
FROM disciplina d
JOIN disciplinas_da_matriz m
ON d.id = m.id_disciplina
WHERE m.id_matriz = 11;

DELETE FROM matriz_curricular
WHERE id_matriz = 1;

drop table turma;

CREATE TABLE turma
(
	id_turma INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    nome_turma VARCHAR(100) NOT NULL,
    sigla VARCHAR(1) NOT NULL,
    ano YEAR NOT NULL,
    turno VARCHAR(20) NOT NULL,
    capacidade INT NOT NULL,
    tipo_ensino_turma VARCHAR(50),
    num_ensino_turma INT NOT NULL,
    situacao BIT DEFAULT 1 NOT NULL
)DEFAULT CHARSET = utf8;

update turma set ano = '2021';
UPDATE responsavel SET id_endereco_residencia = 17 WHERE id = 1;
ALTER TABLE turma 
ADD COLUMN ano YEAR NOT NULL;

describe turma;

INSERT INTO turma 
(
	nome_turma,
	sigla,
	ano,
    turno,
	capacidade,
	tipo_ensino_turma,
    num_ensino_turma
) 
VALUES 
(
	'7 Ano',
	'D',
	2021,
	'Manha',
	30,
	'Ensino Fundamental',
    31
);

update turma set alunos_ativos = 0 where id_turma = 1;

DELETE FROM turma
WHERE id_turma = 4;

SELECT 	nome_turma,
		id_turma,
		sigla,
		ano,
		turno,
		capacidade,
		tipo_ensino_turma,
		num_ensino_turma,
		situacao,
		alunos_ativos
FROM turma
WHERE ano = 2021 AND situacao = 1 and tipo_ensino_turma = 'Ensino Médio'
ORDER BY nome_turma;

CREATE TABLE matricula
(
	id_matricula INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_turma INT NOT NULL,
    id_aluno INT NOT NULL,
    tipo_ensino_turma TINYINT,
    data_matricula DATE NOT NULL,
    data_fim_matricula DATE,
    situacao VARCHAR(15) DEFAULT 'Ativo',
    FOREIGN KEY (id_turma) REFERENCES turma (id_turma),
    FOREIGN KEY (id_aluno) REFERENCES aluno (id_aluno)
)DEFAULT CHARSET = utf8;

drop table matricula;

select * from matriz_curricular;
select * from turma ;

describe funcionario;

SELECT 	t.ano,
		t.tipo_ensino_turma,
        t.nome_turma,
        t.sigla,
        t.turno,
        m.id_matricula,
        m.data_matricula,
        m.data_fim_matricula,
        m.situacao
FROM matricula m
INNER JOIN turma t
ON m.id_turma = t.id_turma
WHERE m.id_aluno = 134;


SELECT 	t.nome_turma,
		t.sigla,
        m.situacao
FROM matricula m
INNER JOIN turma t
ON m.id_turma = t.id_turma
WHERE m.id_aluno = 134 AND t.ano = 2021 AND m.situacao = 'Ativo';

UPDATE turma
SET	alunos_ativos = alunos_ativos - 1
WHERE id_turma = 1;

update turma set alunos_ativos = 0 where id_turma = 3;

DESCRIBE professor_vinculado;
select * from turma;

CREATE TABLE professor_vinculado
(
	id_vinculo INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_turma INT NOT NULL,
    id_disciplina INT NOT NULL,
    id_professor VARCHAR(14) NOT NULL,
    FOREIGN KEY (id_turma) REFERENCES turma (id_turma),
    FOREIGN KEY (id_disciplina) REFERENCES disciplina (id),
    FOREIGN KEY (id_professor) REFERENCES funcionario (cpf_funcionario)
)DEFAULT CHARSET = utf8;

SELECT * FROM professor_vinculado WHERE id_turma = 3;

SELECT nome_funcionario, cpf_funcionario FROM funcionario WHERE cargo_funcionario LIKE '%Ensino%';


SELECT 
    v.id_vinculo, 
    f.nome_funcionario
FROM professor_vinculado v
	INNER JOIN funcionario f ON v.id_professor = f.cpf_funcionario
    INNER JOIN turma t ON t.id_turma = v.id_turma
WHERE v.id_disciplina = 5 AND v.id_turma = 3;






INSERT INTO professor_vinculado
(
	id_turma,
	id_disciplina,
	id_professor
) 
VALUES 
(
	3,
	5,
	'081.065.028-21'
);

drop table professor_vinculado;
select * from matricula;
describe matricula;

insert into funcionario (cpf_funcionario, cargo_funcionario, nome_funcionario, email_funcionario)
values (0, 'Ensino Fundamental 1', '', 'funcionario@viver.com');

insert into login (email, senha, situacao, cargo)
values ('jeanluca554@hotmail.com', 'e10adc3949ba59abbe56e057f20f883e', 1, 'Diretor');

update funcionario set id_login = 8 where cpf_funcionario = '261.504.168-10';

SELECT 	d.nome, 
		d.id
FROM disciplina d
JOIN disciplinas_da_matriz m
ON d.id = m.id_disciplina
WHERE m.id_matriz = 3;

SELECT 	f.cpf_funcionario
FROM funcionario f
JOIN login l
ON l.id_login = f.id_login
WHERE l.id_login = 5;

SELECT t.nome_turma as Turma, d.nome as Disciplina, t.id_turma, t.sigla, d.id AS idDisciplina
FROM turma t
INNER JOIN professor_vinculado p 
ON t.id_turma = p.id_turma
INNER JOIN disciplina d
ON d.id = p.id_disciplina
WHERE p.id_professor = '081.065.028-21';

SELECT a.id_aluno, a.nome_aluno, m.situacao
FROM aluno a
INNER JOIN matricula m
ON a.id_aluno = m.id_aluno
INNER JOIN turma t
ON t.id_turma = m.id_turma
WHERE t.id_turma = 3 AND m.situacao = 'Ativo'
ORDER BY a.nome_aluno;

CREATE TABLE boletim
(
	id_boletim INT(11) NOT NULL AUTO_INCREMENT PRIMARY KEY,
    id_turma INT NOT NULL,
    id_disciplina INT NOT NULL,
    id_aluno INT NOT NULL,
    prova1 INT DEFAULT 0,
    prova2 INT DEFAULT 0,
    trabalho INT DEFAULT 0,
    recuperacao INT DEFAULT 0,
    media INT DEFAULT 0,
    faltas INT DEFAULT 0,
    bimestre INT,
    media_parcial INT DEFAULT 0,
    FOREIGN KEY (id_turma) REFERENCES turma (id_turma),
    FOREIGN KEY (id_disciplina) REFERENCES disciplina (id),
    FOREIGN KEY (id_aluno) REFERENCES aluno (id_aluno)
)DEFAULT CHARSET = utf8;

alter table boletim add column media_parcial INT default 0;

drop table boletim;

INSERT INTO boletim 
(
	id_turma, 
    id_disciplina, 
    id_aluno, 
    prova1, 
    prova2, 
    trabalho, 
    media, 
    faltas, 
    bimestre
)
VALUES 
(
	3,
    4,
    136,
    9,
    8,
    10,
    9,
    2, 
    1
);

select * from boletim;
    
SELECT b.prova1, b.prova2, b.trabalho, b.recuperacao, b.media, b.faltas, b.media_parcial
FROM boletim b
INNER JOIN turma t
ON b.id_turma = t.id_turma
INNER JOIN disciplina d
ON b.id_disciplina = d.id
INNER JOIN aluno a
ON b.id_aluno = a.id_aluno
WHERE b.id_turma = 3 
AND b.id_disciplina = 4 
AND b.id_aluno = 136
AND b.bimestre = 1;

UPDATE boletim 
SET prova1 = 10, prova2 = 10, trabalho = 10, recuperacao = 10, media = 10, faltas = 10
WHERE id_turma = 3 AND id_disciplina = 4 AND bimestre = 1 AND id_aluno = 136;


SELECT d.nome as disciplina, b.prova1, b.prova2, b.trabalho, b.recuperacao, b.media, b.faltas, b.media_parcial
FROM boletim b
INNER JOIN turma t
ON b.id_turma = t.id_turma
INNER JOIN disciplina d
ON b.id_disciplina = d.id
INNER JOIN aluno a
ON b.id_aluno = a.id_aluno
WHERE b.id_turma = 6
AND b.id_aluno = 136
AND b.bimestre = 1;

#listar boletim da sala toda
SELECT d.nome as disciplina, b.prova1, b.prova2, b.trabalho, b.recuperacao, b.media, b.faltas, b.media_parcial, a.nome_aluno
FROM boletim b
INNER JOIN turma t
ON b.id_turma = t.id_turma
INNER JOIN disciplina d
ON b.id_disciplina = d.id
INNER JOIN aluno a
ON b.id_aluno = a.id_aluno
WHERE b.id_turma = 6
AND b.bimestre = 1
ORDER BY a.nome_aluno;

#listar alunos da sala toda
SELECT a.nome_aluno, a.id_aluno
FROM matricula m
INNER JOIN turma t
ON m.id_turma = t.id_turma
INNER JOIN aluno a
ON m.id_aluno = a.id_aluno
WHERE m.id_turma = 6
AND m.situacao = 'Ativo'
ORDER BY a.nome_aluno;

SELECT nome_funcionario, cpf_funcionario, cargo_funcionario
FROM funcionario 
WHERE cpf_funcionario <> 0
ORDER BY nome_funcionario;

select * from aluno;
delete from aluno where id_aluno = 196;
update aluno set situacao = "ativo" where id_aluno = 133;

delete from responsavel where cpf_responsavel = '300.315.858-92';
select * from responsavel;
describe responsavel;

delete from matricula where id_matricula = 5;

select * from login;

UPDATE login SET senha = "332de775a36bbfcb140e1caa06299a8a" WHERE id_login = 4;

# Remover aluno
DELETE FROM aluno WHERE id_aluno = 133;

# Remover tabela boletim
DROP TABLE boletim;